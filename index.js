const Discord = require("discord.js");
const bot = new Discord.Client();
const fetch = require("node-fetch");
const prefix = "!";
const config = require("./config");
const { Transform } = require("stream");
const googleSpeech = require("@google-cloud/speech");
const googleSpeechClient = new googleSpeech.SpeechClient();
GOOGLE_APPLICATION_CREDENTIALS="google.json";

const answer = [];
const question = [];

function convertBufferTo1Channel(buffer) {
  const convertedBuffer = Buffer.alloc(buffer.length / 2);

  for (let i = 0; i < convertedBuffer.length / 2; i++) {
    const uint16 = buffer.readUInt16LE(i * 4);
    convertedBuffer.writeUInt16LE(uint16, i * 2);
  }

  return convertedBuffer;
}

class ConvertTo1ChannelStream extends Transform {
  constructor(source, options) {
    super(options);
  }

  _transform(data, encoding, next) {
    next(null, convertBufferTo1Channel(data));
  }
}

function getUserFromMention(mention) {
  if (!mention) return;
  if (mention.startsWith("<@") && mention.endsWith(">")) {
    mention = mention.slice(2, -1);
    if (mention.startsWith("!")) {
      mention = mention.slice(1);
    }

    return bot.users.cache.get(mention);
  }
}

bot.on("ready", () => {
  console.log("bot is working");
});

bot.on("message", async (message) => {
  if (!message.guild) return;
  if (message.content === "/join") {
    if (message.member.voice.channel) {
      const connection = await message.member.voice.channel.join();
      const receiver = connection.receiver;
      connection.on("speaking", (user, speaking) => {
        if (speaking) {
          console.log(`Im listening to ${user.username}`);
          const audioStream = receiver.createStream(user, { mode: "pcm" });
          const requestConfig = {
            encoding: "LINEAR16",
            sampleRateHertz: 48000,
            languageCode: "ru-RU",  
          };
          const request = {
            config: requestConfig,
          };
          const recognizeStream = googleSpeechClient
            .streamingRecognize(request)
            .on("error", console.error)
            .on("data", (response) => {
              const transcription = response.results
                .map((result) => result.alternatives[0].transcript)
                .join("\n")
                .toLowerCase();
              if (transcription === "–ø—Ä–∏–≤–µ—Ç") {
                message.channel.send("Hello");
              } else if (transcription === "–∫–∞–∫ –¥–µ–ª–∞") {
                message.channel.send("NORMALNO");
              } 
               else if (transcription === "–∫—Ç–æ —Ç–∞–∫–æ–π —é—Ä–∞") {
                message.channel.send("–ª—É—á—à–∏–π –ø–∞—Ä–µ–Ω—å –≤–æ –¥–≤–æ—Ä–µ");
              } else if (transcription === "—á—Ç–æ —ç—Ç–æ –∑–∞ –∫–æ–Ω—Ñ–∞") {
                message.channel.send("—ç—Ç–æ –∫–æ–Ω—Ñ–∞ –¥—Ä—É–∑–µ–π –∏ –¥–æ–±—Ä–æ—Ç—ã!");
              } else if (transcription === "—Å–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 368 —Ö 247") {
                message.channel.send("90896");
              } 
              else if(transcription === "—Ä–µ—Å—É—Ä—Å—ã"){
                message.channel.send(`–ö–Ω–∏–≥–∞ You dont know JS  -  https://github.com/marryday/You-Dont-Know-JS \n
                Youtube –∫–∞–Ω–∞–ª Fun Fun Function  -  https://www.youtube.com/channel/UCO1cgjhGzsSYb1rsB4bFe4Q \n
                course-hunters react  https://coursehunter.net/course/react-js-s-nulya-do-professionala-polnyy-kurs \n
                course-hunters git https://coursehunter.net/course/polnoe-rukovodstvo-po-git-poymite-i-osvoyte-git-i-github \n`)
              }
              else if (transcription === '—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ'){
                message.channel.send(`–ï—Å–ª–∏ –≥–æ–≤–æ—Ä–∏—Ç—å –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏, —Ç–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–± –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥—Ä—É–≥–∏–º —Ñ—É–Ω–∫—Ü–∏—è–º, –∞ —Ç–∞–∫–∂–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏—Ö –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏—è. –í —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –º—ã –¥—É–º–∞–µ–º –∏ –ø–∏—à–µ–º –∫–æ–¥ —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π.\n
                `)
              }
              else if (transcription === "–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã") {
                message.channel
                  .send(`–û–±—ã—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ-–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–∏–ª–∏ –Ω–∏—á–µ–≥–æ).

                –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –ø–æ—Ä–æ–∂–¥–∞—Ç—å (yield) –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∑–Ω–∞—á–µ–Ω–∏–π –æ–¥–Ω–æ –∑–∞ –¥—Ä—É–≥–∏–º, –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏. –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –æ—Ç–ª–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏ –∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –ª–µ–≥–∫–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ—Ç–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö.\n
                https://learn.javascript.ru/generators\n`);
              } 
             else if (question.includes(transcription)) {
                const index = question.indexOf(transcription);
                console.log(question.indexOf(transcription));
                message.channel.send(answer[index]);
              }
              console.log(`Transcription: ${transcription}`);
            });

          const convertTo1ChannelStream = new ConvertTo1ChannelStream();

          audioStream.pipe(convertTo1ChannelStream).pipe(recognizeStream);

          audioStream.on("end", async () => {
            console.log("audioStream end");
          });
        } else {
          console.log(`I stopped listening to ${user.username}`);
        }
      });
    } else {
      message.reply("You need to join a voice channel");
    }
  }
});

bot.on("message", async (msg) => {
  if (msg.author.username === "LapkaVlasti") msg.react("üíÑ");
  else if (msg.author.username === `Fi'WŒ£`) {
    msg.react("üë†");
    msg.react("338758498852536321");
  } else if (!msg.content.startsWith(prefix)) {
    return;
  }
  const args = msg.content.slice(prefix.length).trim().split(/ +/g);
  const command = args.shift().toLocaleLowerCase();
  console.log(args);
  console.log(command);

  if (command === "help") {
    msg.channel.send(
      "–ü—Ä–∏–≤–µ—Ç–∏–∫–∏ –≤ —ç—Ç–æ–º —á–∞—Ç–∏–∫–µ! \n\n!—Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞\n!filter - Array.prototype.filter()\n!map - Array.prototype.map()\n!reduce - Array.prototype.reduce()\n!–û–û–ü - –û–±—ä–µ–∫—Ç–Ω–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ\n!port - —É–±–∏—Ç—å –ø–æ—Ä—Ç 3000\n\n!avatar @*username* - –ø–æ–∫–∞–∑–∞—Ç—å –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n!f - pay respect to @*username*\n!capslock - –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–ø—Å–ª–æ–∫–æ–º\n\n!panda - —Ä–∞–Ω–¥–æ–º–Ω–∞—è –ø–∏–∫—á–∞ –∫—Ä–∞—Å–Ω–æ–π –ø–∞–Ω–¥—ã\n!fox - —Ä–∞–Ω–¥–æ–º–Ω–∞—è –ø–∏–∫—á–∞ –ª–∏—Å—ã\n!meme - —Ä–∞–Ω–¥–æ–º–Ω—ã–π –º–µ–º\n!joke - —Ä–∞–Ω–¥–æ–º–Ω–∞—è —à—É—Ç–∫–∞\n\n /join –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –±–æ—Ç –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª\n–ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n–ü—Ä–∏–≤–µ—Ç\n–ö—Ç–æ —Ç–∞–∫–æ–π —é—Ä–∞\n–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ\n–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã\n–†–µ—Å—É—Ä—ã - –ø–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –ø–æ JS"
    );
  }
  if (command === "avatar") {
    if (args[0]) {
      // Change `getUserFromMention` to `getUserFromMentionRegEx` to try the RegEx variant.
      const user = getUserFromMention(args[0]);
      if (!user) {
        return msg.reply(
          "Please use a proper mention if you want to see someone else's avatar."
        );
      }
      return msg.channel.send(
        `${user.username}'s avatar: ${user.displayAvatarURL({ dynamic: true })}`
      );
    }
    return msg.channel.send(
      `${msg.author.username}, your avatar: ${msg.author.displayAvatarURL({
        dynamic: true,
      })}`
    );
  }
  if (command === "add") {
    if (args[0].startsWith('"')) {
      let i = 0;
      let result = "";
      while (!args[i].endsWith('"')) {
        result += ` ${args[i]}`;
        i++;
      }
      result += ` ${args[i]}`;
      let newResult = result.replace('"', "").replace(" ", "");

      question.push(newResult.replace('"', ""));
      let x = i + 1;
      let res = "";
      while (!args[x].endsWith('"')) {
        res += ` ${args[x]}`;
        x++;
      }
      res += ` ${args[x]}`;
      let newRes = res.replace('"', "").replace(" ", "");
      answer.push(newRes.replace('"', ""));
      console.log(question, answer);
    } else {
      question.push(args[0]);
      answer.push(args[1]);
      console.log(question, answer);
    }
  }
  if (command === "f") {
    if (args[0]) {
      const user = getUserFromMention(args[0]);
      if (!user) {
        return msg.reply(`Please use a proper mention`);
      }
      return msg.reply("paid respect for " + "<@!" + `${user.id}` + ">");
    }
    msg.channel.send(`${msg.author.username} paid respect for @${args[0]}`);
  }
  if (command === "port") {
    msg.channel.send("fuser -n tcp -k 3000");
  }
  if (command === "lenny") {
    msg.channel.send("( Õ°¬∞ Õú ñ Õ°¬∞)");
  }
  if (command === "—Ñ—É–Ω–∫—Ü–∏–∏" && args[0] === "–≤—ã—Å—à–µ–≥–æ" && args[1] === "–ø–æ—Ä—è–¥–∫–∞") {
    msg.channel
      .send(`–¢–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–ø–µ—Ä–∏—Ä—É—é—Ç –¥—Ä—É–≥–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏, –ø—Ä–∏–Ω–∏–º–∞—è –∏—Ö –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞—è –∏—Ö. –ü—Ä–æ—â–µ –≥–æ–≤–æ—Ä—è, —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞ ‚Äï —ç—Ç–æ —Ç–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç —Ñ—É–Ω–∫—Ü–∏—é –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç —Ñ—É–Ω–∫—Ü–∏—é –≤ –∫–∞—á–µ—Å—Ç–≤–µ –≤—ã–≤–æ–¥–∞.
    \n–ù–∞–ø—Ä–∏–º–µ—Ä, —ç—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞ –≤—Å—Ç—Ä–æ–µ–Ω—ã –≤ —è–∑—ã–∫: Array.prototype.map, Array.prototype.filter –∏ Array.prototype.reduce .`);
  }
  if (command === "—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ" && args[0] === "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ") {
    msg.channel.send(
      `–ï—Å–ª–∏ –≥–æ–≤–æ—Ä–∏—Ç—å –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏, —Ç–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–± –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥—Ä—É–≥–∏–º —Ñ—É–Ω–∫—Ü–∏—è–º, –∞ —Ç–∞–∫–∂–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏—Ö –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏—è. –í —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –º—ã –¥—É–º–∞–µ–º –∏ –ø–∏—à–µ–º –∫–æ–¥ —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π.`
    );
  }
  if (command === "filter") {
    msg.channel.send(`Array.prototype.filter\n\n–ú–µ—Ç–æ–¥ filter() —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å–æ –≤—Å–µ–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏, –ø—Ä–æ—à–µ–¥—à–∏–º–∏ –ø—Ä–æ–≤–µ—Ä–∫—É, –∑–∞–¥–∞–≤–∞–µ–º—É—é –≤ –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.`);
  }
  if (command === "reduce") {
    msg.channel.send(`Array.prototype.reduce\n\n–ú–µ—Ç–æ–¥ reduce –≤—ã–ø–æ–ª–Ω—è–µ—Ç callback-—Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤—ã–∑—ã–≤–∞–µ–º–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, —á—Ç–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –æ–¥–Ω–æ–º—É –≤—ã—Ö–æ–¥–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é. –ú–µ—Ç–æ–¥ reduce –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: \n1) reducer-—Ñ—É–Ω–∫—Ü–∏—é (callback), \n2) –∏ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ initialValue.
    \nReducer-—Ñ—É–Ω–∫—Ü–∏—è (callback) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç 4 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: accumulator, currentValue, currentIndex, sourceArray.\n–ï—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä initialValue –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω, —Ç–æ–≥–¥–∞ accumulator –±—É–¥–µ—Ç —Ä–∞–≤–µ–Ω initialValue , –∞ currentValue —Ä–∞–≤–µ–Ω –ø–µ—Ä–≤–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –≤ –º–∞—Å—Å–∏–≤–µ.\n–ï—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä initialValue –Ω–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω, —Ç–æ–≥–¥–∞ accumulator –±—É–¥–µ—Ç —Ä–∞–≤–µ–Ω –ø–µ—Ä–≤–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤–∞, –∞ currentValue ‚Äì –≤—Ç–æ—Ä–æ–º—É.`);
  }
  if (command === "–æ–æ–ø") {
    msg.channel.send(
      `–û–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ (–û–û–ü) ‚Äî —ç—Ç–æ —à–∞–±–ª–æ–Ω –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏ —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –∏—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π. –û–û–ü –æ–±—ã—á–Ω–æ —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –∫–ª–∞—Å—Å–æ–≤ –∏–ª–∏ –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–≤. JavaScript —Ä–µ–∞–ª–∏–∑—É–µ—Ç –û–û–ü —á–µ—Ä–µ–∑ –ø—Ä–æ—Ç–æ—Ç–∏–ø–Ω–æ–µ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ.`
    );
  }
  if (command === "map") {
    msg.channel.send(`Array.prototype.map()\n\n–ú–µ—Ç–æ–¥ map() —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã–∑–æ–≤–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞.`);
  }
  if (command === "clear") {
    let num = 2;
    if (args[0]) {
      num = parseInt(args[0]) + 1;
    }
    msg.channel.bulkDelete(num);
    msg.channel.send(`bot deleted ${num - 1} messages for yo`);
  }
  if (command === "capslock") {
    const combinedArgs = args.join(" ");
    msg.channel.send(
      `${
        msg.author.username
      } is angry has something to say: \n ${combinedArgs.toUpperCase()}`
    );
  }

  if (command === "joke") {
    let getJoke = async () => {
      let joke = await (
        await fetch("https://official-joke-api.appspot.com/random_joke")
      ).json();
      return joke;
    };
    let jokeValue = await getJoke();
    console.log(jokeValue);
    msg.reply(`${jokeValue.setup}\n${jokeValue.punchline}`);
  }
  if (command === "fox") {
    let getFox = async () => {
      let fox = await (await fetch("https://randomfox.ca/floof/")).json();
      return fox;
    };
    let foxValue = await getFox();
    msg.reply(`${foxValue.image}`);
  }
  if (command === "panda") {
    let getPanda = async () => {
      let response = await (
        await fetch("https://some-random-api.ml/img/red_panda")
      ).json();
      return response;
    };
    let pandaValue = await getPanda();
    msg.reply(`${pandaValue.link}`);
  }
  if (command === "meme") {
    let getMeme = async () => {
      let meme = await (await fetch("https://some-random-api.ml/meme")).json();
      return meme;
    };
    let memeValue = await getMeme();

    msg.reply(`${memeValue.image}`);
  }
});

bot.login(config.discordApiToken);
